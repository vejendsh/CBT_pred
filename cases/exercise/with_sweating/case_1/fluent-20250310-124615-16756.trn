Auto-Transcript Start Time:  12:46:15, 10 Mar 2025 Eastern Daylight Time 
Current Directory: "C:\Users\Research\Desktop\CBT_pred\cases\exercise\with_sweating\case_1"

              Welcome to ANSYS Fluent 2024 R2

              Copyright 1987-2024 ANSYS, Inc. All Rights Reserved.
              Unauthorized use, distribution or duplication is prohibited.
              This product is subject to U.S. laws governing export and re-export.
              For full Legal Notice, see documentation.

Build Time: May 13 2024 11:21:01 EST  Build Id: 10192  
 
Connected License Server List:	1055@police.ceas1.uc.edu

     --------------------------------------------------------------
     This is an academic version of ANSYS FLUENT. Usage of this product
     license is limited to the terms and conditions specified in your ANSYS
     license form, additional terms section.
     --------------------------------------------------------------
Host spawning Node 0 on machine "BME-BANER-01" (win64).

-------------------------------------------------------------------------------
ID    Hostname      Core  O.S.         PID    Vendor                         
-------------------------------------------------------------------------------
n3    BME-BANER-01  4/8  Windows-x64  19444  Intel(R) Core(TM) i7-9700      
n2    BME-BANER-01  3/8  Windows-x64  9936   Intel(R) Core(TM) i7-9700      
n1    BME-BANER-01  2/8  Windows-x64  3668   Intel(R) Core(TM) i7-9700      
n0*   BME-BANER-01  1/8  Windows-x64  12336  Intel(R) Core(TM) i7-9700      
host  BME-BANER-01       Windows-x64  15176  Intel(R) Core(TM) i7-9700      

MPI Option Selected: intel
Selected system interconnect: default
-------------------------------------------------------------------------------

Cleanup script file is C:\\Users\\Research\\Desktop\\CBT_pred\\cases\\exercise\\with_sweating\\case_1\\cleanup-fluent-BME-BANER-01-15176.bat
Fast-loading "C:\PROGRA~1\ANSYSI~1\v242\fluent\fluent24.2.0\\addons\afd\lib\hdfio.bin"
Done.
Multicore processors detected. Processor affinity set!

Reading from BME-BANER-01:"C:/Users/Research/Desktop/CBT_pred/cases/exercise/with_sweating/case_1/Case.cas.h5" in NODE0 mode ...
  Reading mesh ...
       59946 cells,     3 cell zones ...
            918 hexahedral cells,  zone id: 8
          57345 mixed cells,  zone id: 9
           1683 tetrahedral cells,  zone id: 10
      127549 faces,     9 face zones ...
          11168 triangular wall faces,  zone id: 1
            336 triangular wall faces,  zone id: 2
             60 triangular wall faces,  zone id: 3
             60 triangular wall faces,  zone id: 12
            618 quadrilateral wall faces,  zone id: 4
            618 quadrilateral wall faces,  zone id: 13
           2445 quadrilateral interior faces,  zone id: 5
           3168 triangular interior faces,  zone id: 6
         109076 triangular interior faces,  zone id: 7
       14632 nodes,     1 node zone  ...
  Done.


Checking the existence of compiled "libudf" UDF library for current platform.
If needed will attempt auto-compilation...

 	 Make sure that UDF source files are in the directory 
 	 that contains your case and data files. If you have 
 	 an existing libudf directory, please remove this 
 	 directory to ensure that latest files are used. 
  

Error: Auto-compilation skipped. Could not find "libudf" or input files for creating "libudf" library
Error Object: #f

Building...
     mesh
	auto partitioning mesh by Metis (fast),
	distributing mesh
		pairs....,
		parts....,
		faces....,
		nodes....,
		shadow nodes....,
		cells....,
        bandwidth reduction using Reverse Cuthill-McKee: 14875/334 = 44.5359
     materials,
     interface,
     domains,
	mixture
     zones,
	interior-part-muscle
	interior-part-head
	interior-part-organs
	wall-part-head
	wall-part-muscle
	interior-part-head-part-muscle
	interior-part-muscle-part-organs
	interior-part-head-part-muscle-shadow
	interior-part-muscle-part-organs-shadow
	part-head
	part-muscle
	part-organs(cx-gui-do cx-activate-item "Error*OK")

     parallel,
Done.

> (cx-gui-do cx-activate-item "MenuBar*FileMenu*Preferences...")
(cx-gui-do cx-activate-item "Warning*OK")
(cx-gui-do cx-activate-item "Preferences*PanelButtons*PushButton1(OK)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters"))
(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters"))
(cx-gui-do cx-activate-item "Parameters*PanelButtons*PushButton1(Close)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters|Input Parameters"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters|Input Parameters"))
(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters|Input Parameters"))
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton3(More)")
(cx-gui-do cx-set-list-selections "Parameters*Table1*Table1*List1(Input Parameters)" '( 8))
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*List1(Input Parameters)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton3(More)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuMoreInputParamenters*Use in UDF")
(cx-gui-do cx-activate-item "Use Input Parameter for UDF*PanelButtons*PushButton2(Close)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton3(More)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuMoreInputParamenters*Use in Scheme Procedure")
(cx-gui-do cx-activate-item "Use Input Parameter in Scheme Procedure*PanelButtons*PushButton2(Close)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton1(Edit)")
(cx-gui-do cx-activate-tab-index "Expression*Table1*Frame1" 0)
(cx-gui-do cx-activate-tab-index "Expression*Table1*Frame1" 1)
(cx-gui-do cx-activate-tab-index "Expression*Table1*Frame1" 0)
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters|Input Parameters"))
(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton3(More)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table2*Table2*PushButton1(Create)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreateParameters*From Report Definitions...")
(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton1(Edit)")
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton1(OK)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton3(More)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuMoreInputParamenters*Use in Scheme Procedure")
(cx-gui-do cx-activate-item "Use Input Parameter in Scheme Procedure*PanelButtons*PushButton2(Close)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton3(More)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuMoreInputParamenters*Use in UDF")
(cx-gui-do cx-activate-item "Use Input Parameter for UDF*Table1*PushButton4(Define)")

Error: Please select input parameter
Error Object: #f
(cx-gui-do cx-activate-item "Error*OK")
(cx-gui-do cx-set-list-selections "Use Input Parameter for UDF*Table1*List5(Registered List)" '( 7))
(cx-gui-do cx-activate-item "Use Input Parameter for UDF*Table1*List5(Registered List)")
(cx-gui-do cx-activate-item "Use Input Parameter for UDF*Table1*PushButton4(Define)")

Error: Please select input parameter
Error Object: #f
(cx-gui-do cx-activate-item "Error*OK")
(cx-gui-do cx-activate-item "Use Input Parameter for UDF*Table1*Table2*PushButton2(Select)")
(cx-gui-do cx-activate-item "Select Input Parameter*Table1*PushButton4(New Parameter)")
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Select Input Parameter*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Use Input Parameter for UDF*PanelButtons*PushButton2(Close)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton1(Edit)")
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Parameters*PanelButtons*PushButton1(Close)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters|Input Parameters"))
(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )
(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Input Parameters*Edit...")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton1(Edit)")
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton1(Edit)")
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("9225 [W/ m^3]" . 1))
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton1(OK)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton3(More)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuMoreInputParamenters*Use in UDF")
(cx-gui-do cx-activate-item "Use Input Parameter for UDF*Table1*Table2*PushButton2(Select)")
(cx-gui-do cx-activate-item "Select Input Parameter*Table1*PushButton4(New Parameter)")
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("0" . 1))
(cx-gui-do cx-set-text-entry "Parameter Expression*Table1*TextEntry2(Name)" "par")
(cx-gui-do cx-activate-item "Parameter Expression*Table1*TextEntry2(Name)")
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("03" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("033" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("033" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-activate-item "Parameter Expression*Table1*ExpressionEntry3(Definition)")
(cx-gui-do cx-set-expression-entry "Parameter Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Select Input Parameter*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Use Input Parameter for UDF*PanelButtons*PushButton2(Close)")
(cx-gui-do cx-activate-item "Parameters*PanelButtons*PushButton1(Close)")
(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Named Expressions)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuNamed Expressions*New...")
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("d_blood" . 1))
(cx-gui-do cx-activate-item "Expression*Table1*ExpressionEntry3(Definition)")
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("d_blood" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("d_blood" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("d_blood" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("d_blood" . 1))
(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Named Expressions)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuNamed Expressions*New...")
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("cross(<vector>,<vector>)" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("cross(<vector>,<vector>)" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("cross" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-text-entry "Expression*Table1*TextEntry2(Name)" "HR")
(cx-gui-do cx-activate-item "Expression*Table1*TextEntry2(Name)")
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions"))
(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Solid|part-head (solid, id=10)"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Solid|part-head (solid, id=10)"))
(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Cell Zone Conditions|Solid|part-head (solid, id=10)"))
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 0)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 1)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 0)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 2)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 0)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 3)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 0)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 4)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 0)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 5)
(cx-gui-do cx-activate-tab-index "Solid*Frame2*Table3*Frame1" 0)
(cx-gui-do cx-activate-item "Solid*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Solid|tissue1"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Solid|tissue1"))
(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Materials|Solid|tissue1"))
(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters|Input Parameters"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters|Input Parameters"))
(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Parameters|Input Parameters"))
(cx-gui-do cx-set-list-selections "Parameters*Table1*Table1*List1(Input Parameters)" '( 0))
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*List1(Input Parameters)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton1(Edit)")
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-set-list-selections "Parameters*Table1*Table1*List1(Input Parameters)" '( 4))
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*List1(Input Parameters)")
(cx-gui-do cx-activate-item "Parameters*Table1*Table1*Table2*PushButton1(Edit)")
(cx-gui-do cx-activate-item "Parameter Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Parameters*PanelButtons*PushButton1(Close)")
(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton2(Named Expressions)")
(cx-gui-do cx-activate-item "MenuBar*PopupMenuNamed Expressions*New...")
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-set-expression-entry "Expression*Table1*ExpressionEntry3(Definition)" '("" . 1))
(cx-gui-do cx-activate-item "Expression*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Custom Field Functions"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Custom Field Functions"))
(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Custom Field Functions"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Parameters & Customization|Custom Field Functions"))
(cx-gui-do cx-list-tree-right-click "NavigationPane*Frame2*Table1*List_Tree2" )
(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Custom Field Functions*New...")
(cx-gui-do cx-activate-item "Custom Field Function Calculator*PanelButtons*PushButton2(Cancel)")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|wall-part-muscle (wall, id=1)"))
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|wall-part-muscle (wall, id=1)"))
(cx-gui-do cx-activate-item "NavigationPane*Frame2*Table1*List_Tree2")
(cx-gui-do cx-set-list-tree-selections "NavigationPane*Frame2*Table1*List_Tree2" (list "Setup|Boundary Conditions|Wall|wall-part-muscle (wall, id=1)"))
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 2)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 3)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 4)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 5)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 6)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 7)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 8)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 9)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 10)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 1)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 2)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 3)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 4)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 5)
(cx-gui-do cx-activate-tab-index "Wall*Frame4*Frame8(Wall Film)*Frame1*Frame2" 0)
(cx-gui-do cx-activate-tab-index "Wall*Frame4" 1)
(cx-gui-do cx-enable-apply-button "Wall")
(cx-gui-do create-new-param "Wall*Frame4*Frame2(Thermal)*Frame1*Frame1(Thermal Conditions)*Table3*Table1*Table2*ExpressionEntry1(Heat Flux)" 0 "heat-flux")
